[
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nConsidere el siguiente conjunto de datos que se midieron mediante una experiencia en el laboratorio siguiendo el modelo de caída libre. La resolución del cronómetro (empleado para medir el tiempo) es de \\(0.01\\,{\\rm s}\\) y la resolución de la regla (empleada para medir la longitud) es \\(1\\,{\\rm cm}\\).\n\n\n\n\n\n\n\n\n\n\n\n\nAltura 1\nAltura 2\nAltura 3\nAltura 4\nAltura 5\n\n\n\n\n\n(\\(100\\,{\\rm cm}\\))\n(\\(80\\,{\\rm cm}\\))\n(\\(60\\,{\\rm cm}\\))\n(\\(50\\,{\\rm cm}\\))\n(\\(40\\,{\\rm cm}\\))\n\n\n\n\n\n\n\n\n\n\n\n0.46\n0.43\n0.37\n0.33\n0.27\n\n\nTiempo de\n0.47\n0.42\n0.37\n0.34\n0.28\n\n\ncaída libre\n0.48\n0.42\n0.38\n0.32\n0.28\n\n\n(\\({\\rm s}\\))\n0.46\n0.41\n0.36\n0.30\n0.29\n\n\n\n0.46\n0.41\n0.37\n0.33\n0.29\n\n\n\n\nDetermine el tiempo promedio y su incertidumbre con su incertidumbre para cada altura.\nUtilizando los tiempos promedios para cada altura realice los gráficos de: (i) tiempo vs altura y (tiempo)\\(^2\\) vs altura. ¿Cuál de los dos gráficos esperaría que sea una recta?\nRealice la regresión lineal por el método de cuadrados mínimos y obtenga el valor de la pendiente y su incertidumbre, completando la siguiente tabla:"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "7  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LabFisFQ",
    "section": "",
    "text": "1 Inicio\nEn el sitio se encuentran una selección de notas del curso de Laboratorio de Física (clave: 1210) de la Facultad de Química, UNAM.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Inicio</span>"
    ]
  },
  {
    "objectID": "tarea1.html#ejercicio-densidad",
    "href": "tarea1.html#ejercicio-densidad",
    "title": "2  Tarea 1 - La medición y su incertidumbre",
    "section": "2.3 Ejercicio densidad",
    "text": "2.3 Ejercicio densidad\nSe midió una vez el diámetro, el espesor y la masa de una moneda para determinar su densidad volumétrica de masa. Las medidas obtenidas para cada mensurando y el instrumento utilizado, con su resolución y unidades, se muestran a continuación:\n\n\n\n\n\n\n\n\n\nMensurando\nInstrumento\nMedida\nIncertidumbre del instrumento\n\n\n\n\nDiámetro\nCalibrador vernier\n\\(26.25\\,{\\rm mm}\\)\n\\(\\pm 0.05\\,{\\rm mm}\\)\n\n\nEspesor\nTornillo micrométrico\n\\(2.448\\,{\\rm mm}\\)\n\\(\\pm 0.001\\,{\\rm mm}\\)\n\n\nMasa\nBalanza granataria con escala vernier\n\\(62.09\\,{\\rm g}\\)\n\\(\\pm 0.01\\,{\\rm g}\\)\n\n\n\n¿Cuál es la densidad de la moneda en \\({\\rm g/mm}^3\\)?\nRespuesta\nComenzamos recordando que la densidad se determina por la siguiente expresión, \\[\n\\rho = \\frac{M}{V}\\,,\n\\] donde \\(M\\) es la masa y \\(V\\) es el volúmen. De acuerdo con las unidades que nos requiere el ejercicio, el valor de la masa debe de estar en gramos y el valor del volumen en milímetros al cubo.\nLa moneda se puede aproximar geométricamente a un cilíndro por lo que el volumen puede medirse de forma indirecta como: \\[\nV = \\frac{\\pi D^2 h}{4}\n\\] donde \\(D\\) es el diámetro y \\(h\\) es el espesor. Por tanto la densidad puede obtenerse de la expresión: \\[\n\\rho = \\frac{4M}{\\pi D^2 h}\n\\]\nLa incertidumbre asociada a la densidad está dada por: \\[\nu_C(\\rho) = \\sqrt{  \\bigg(\\frac{\\partial \\rho}{\\partial M}\\bigg|_{\\bar{M},\\bar{D},\\bar{h}} u_C(M)\\bigg)^2 + \\bigg(\\frac{\\partial \\rho}{\\partial D}\\bigg|_{\\bar{M},\\bar{D},\\bar{h}} u_C(D)\\bigg)^2 + \\bigg(\\frac{\\partial \\rho}{\\partial h}\\bigg|_{\\bar{M},\\bar{D},\\bar{h}} u_C(h)\\bigg)^2 }\n\\] Las derivadas parciales (o coeficientes de sensibilidad) que se encuentran en la expresión son\n\\[\n\\frac{\\partial \\rho}{\\partial M} = \\frac{4}{\\pi D^2 h}\n\\]\n\\[\n\\frac{\\partial \\rho}{\\partial D} = -\\frac{8M}{\\pi D^3 h}\n\\]\n\\[\n\\frac{\\partial \\rho}{\\partial h} = -\\frac{4M}{\\pi D^2 h^2}\n\\]\n\n\nMostrar código\nfrom pylab import *\n\nπ =pi\nD    = 26.25\nuD_B = 0.05\nuD_C = uD_B\n\nh    = 2.448\nuh_B = 0.001\nuh_C = uh_B\n\nM    = 62.09 \nuM_B = 0.01\nuM_C = uM_B\n\ndρdM = 4/D/D/h/π\ndρdD = -8*M/D/D/D/h/π\ndρdh = -4*M/D/D/h/h/π\n\n\nprint(dρdM)\nprint(dρdD)\nprint(dρdh)\nρ = 4*M/D/D/h/π\nuρ_C = sqrt( (dρdM*uM_C)**2 + (dρdD*uD_C)**2 + (dρdh*uh_C)**2   )\nprint(\"ρ =\",ρ)\nprint(\"u(ρ) = \",uρ_C)\n\n\n0.0007548142485054245\n-0.003570774604929662\n-0.019144778059518714\nρ = 0.04686641668970181\nu(ρ) =  0.000179720825671232\n\n\n\n\nMostrar código\nprint('ρ    = {0:.4f} [g/mm³]'.format(ρ))\nprint('u(ρ) = {0:.4f} [g/mm³]'.format(uρ_C))\n\n\nρ    = 0.0469 [g/mm³]\nu(ρ) = 0.0002 [g/mm³]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tarea 1 - La medición y su incertidumbre</span>"
    ]
  },
  {
    "objectID": "tarea1.html#mediciones-directas-e-indirectas",
    "href": "tarea1.html#mediciones-directas-e-indirectas",
    "title": "2  Tarea 1 - La medición y su incertidumbre",
    "section": "2.1 Mediciones directas e indirectas",
    "text": "2.1 Mediciones directas e indirectas\n¿Cuál es la diferencia entre una medida directa y una medida indirecta?"
  },
  {
    "objectID": "tarea1.html#incertidumbre-tipo-a-y-tipo-b",
    "href": "tarea1.html#incertidumbre-tipo-a-y-tipo-b",
    "title": "2  Tarea 1 - La medición y su incertidumbre",
    "section": "2.2 Incertidumbre Tipo A y Tipo B",
    "text": "2.2 Incertidumbre Tipo A y Tipo B\n¿Cuál es la diferencia entre incertidumbre tipo A e incertidumbre tipo B?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tarea 1 - La medición y su incertidumbre</span>"
    ]
  },
  {
    "objectID": "tarea2.html",
    "href": "tarea2.html",
    "title": "3  Tarea 2 - Ajuste lineal",
    "section": "",
    "text": "3.1 Gráfica de; ajuste lineal\nMostrar código\nscatter( X,Y  )\nx = linspace(X.min(),X.max())\ny = m*x+b\nplot( x,y )\nxlabel('X');\nylabel('Y');",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Tarea 2 - Ajuste lineal</span>"
    ]
  },
  {
    "objectID": "caidalibre.html",
    "href": "caidalibre.html",
    "title": "7  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nConsidere el siguiente conjunto de datos que se midieron mediante una experiencia en el laboratorio siguiendo el modelo de caída libre. La resolución del cronómetro (empleado para medir el tiempo) es de \\(0.01\\,{\\rm s}\\) y la resolución de la regla (empleada para medir la longitud) es \\(1\\,{\\rm cm}\\).\n\n\n\n\n\n\n\n\n\n\n\n\nAltura 1\nAltura 2\nAltura 3\nAltura 4\nAltura 5\n\n\n\n\n\n(\\(100\\,{\\rm cm}\\))\n(\\(80\\,{\\rm cm}\\))\n(\\(60\\,{\\rm cm}\\))\n(\\(50\\,{\\rm cm}\\))\n(\\(40\\,{\\rm cm}\\))\n\n\n\n\n\n\n\n\n\n\n\n0.46\n0.43\n0.37\n0.33\n0.27\n\n\nTiempo de\n0.47\n0.42\n0.37\n0.34\n0.28\n\n\ncaída libre\n0.48\n0.42\n0.38\n0.32\n0.28\n\n\n(\\({\\rm s}\\))\n0.46\n0.41\n0.36\n0.30\n0.29\n\n\n\n0.46\n0.41\n0.37\n0.33\n0.29\n\n\n\n\nDetermine el tiempo promedio y su incertidumbre con su incertidumbre para cada altura.\nUtilizando los tiempos promedios para cada altura realice los gráficos de: (i) tiempo vs altura y (tiempo)\\(^2\\) vs altura. ¿Cuál de los dos gráficos esperaría que sea una recta?\nRealice la regresión lineal por el método de cuadrados mínimos y obtenga el valor de la pendiente y su incertidumbre, completando la siguiente tabla:"
  },
  {
    "objectID": "tarea2.html#gráfica-de-ajuste-lineal",
    "href": "tarea2.html#gráfica-de-ajuste-lineal",
    "title": "3  Tarea 2 - Ajuste lineal",
    "section": "3.1 Gráfica de; ajuste lineal",
    "text": "3.1 Gráfica de; ajuste lineal\n\n\nCode\nscatter( X,Y  )\nx = linspace(X.min(),X.max())\ny = m*x+b\nplot( x,y )\nxlabel('X');\nylabel('Y');"
  },
  {
    "objectID": "tarea1.html#ejercicio",
    "href": "tarea1.html#ejercicio",
    "title": "2  Tarea 1 - La medición y su incertidumbre",
    "section": "2.4 Ejercicio",
    "text": "2.4 Ejercicio\n\n\n\n0.06\n1.04\n1.21\n1.88\n2.06\n2.10\n2.14\n2.27\n2.47\n2.60\n\n\n2.70\n2.89\n3.07\n3.09\n3.30\n3.31\n3.50\n3.71\n3.78\n3.86\n\n\n3.93\n4.06\n4.15\n4.19\n4.22\n4.38\n4.40\n4.45\n4.55\n4.57\n\n\n4.66\n4.77\n4.86\n4.86\n4.87\n4.91\n4.98\n5.05\n5.08\n5.08\n\n\n5.13\n5.19\n5.19\n5.22\n5.37\n5.40\n5.43\n5.49\n5.55\n5.57\n\n\n5.59\n5.59\n5.66\n5.68\n5.69\n5.71\n5.72\n5.75\n5.90\n5.91\n\n\n5.91\n6.03\n6.13\n6.21\n6.29\n6.29\n6.42\n6.44\n6.50\n6.57\n\n\n6.60\n6.68\n6.72\n6.78\n6.83\n6.84\n6.85\n6.86\n7.03\n7.11\n\n\n7.26\n7.31\n7.61\n7.63\n7.64\n7.67\n7.72\n7.78\n7.83\n7.85\n\n\n7.86\n7.88\n7.89\n7.97\n7.99\n8.04\n8.10\n8.19\n8.23\n8.23\n\n\n8.28\n8.39\n8.39\n8.51\n8.57\n8.57\n8.62\n8.62\n8.66\n8.66\n\n\n8.69\n8.76\n9.10\n9.19\n9.24\n9.28\n9.35\n9.50\n9.60\n9.69\n\n\n9.76\n9.76\n9.86\n10.11\n10.12\n10.58\n10.65\n10.83\n11.13\n11.21\n\n\n11.30\n11.43\n11.48\n11.99\n12.01\n12.44\n13.59\n\n\n\n\n\n\n\n\nMostrar código\nfrom pylab import *\nfrom scipy import stats\n\n\n\n\nMostrar código\nData = array( [ 0.06 , 2.7  , 3.93 , 4.66 , 5.13 , 5.59 , 5.91 , 6.6  , 7.26 , 7.86 , 8.28 , 8.69,\n  9.76 ,11.3  , 1.04 , 2.89 , 4.06 , 4.77 , 5.19 , 5.59 , 6.03 , 6.68 , 7.31 , 7.88,\n  8.39 , 8.76 , 9.76 ,11.43 , 1.21 , 3.07 , 4.15 , 4.86 , 5.19 , 5.66 , 6.13 , 6.72,\n  7.61 , 7.89 , 8.39 , 9.1  , 9.86 ,11.48 , 1.88 , 3.09 , 4.19 , 4.86 , 5.22 , 5.68,\n  6.21 , 6.78 , 7.63 , 7.97 , 8.51 , 9.19 ,10.11 ,11.99 , 2.06 , 3.3  , 4.22 , 4.87,\n  5.37 , 5.69 , 6.29 , 6.83 , 7.64 , 7.99 , 8.57 , 9.24 ,10.12 ,12.01 , 2.1  , 3.31,\n  4.38 , 4.91 , 5.4  , 5.71 , 6.29 , 6.84 , 7.67 , 8.04 , 8.57 , 9.28 ,10.58 ,12.44,\n  2.14 , 3.5  , 4.4  , 4.98 , 5.43 , 5.72 , 6.42 , 6.85 , 7.72 , 8.1  , 8.62 , 9.35,\n 10.65 ,13.59 , 2.27 , 3.71 , 4.45 , 5.05 , 5.49 , 5.75 , 6.44 , 6.86 , 7.78 , 8.19,\n  8.62 , 9.5  ,10.83 , 2.47 , 3.78 , 4.55 , 5.08 , 5.55 , 5.9  , 6.5  , 7.03 , 7.83,\n  8.23 , 8.66 , 9.6  ,11.13 , 2.6  , 3.86 , 4.57 , 5.08 , 5.57 , 5.91 , 6.57 , 7.11,\n  7.85 , 8.23 , 8.66 , 9.69 ,11.21] )\n\n\n\n\nMostrar código\nmean = Data.mean()\nprint (\"media aritmética : {0:.3} mg\".format(mean))\n\nprint (\"mínimo valor de v: {0:.3} mg\".format(min(Data)))\nprint (\"máximo valor de v: {0:.3} mg\".format(max(Data)))\n# print (bins)\n\nprint (\"valor ejemplo : {0:.3}\".format(Data[3]))\n\nprint( sort(Data) )\nprint (\"Moda utilizando stats.mode() :\",stats.mode(Data,keepdims=True))\nmoda    = stats.mode(Data,keepdims=True)[0][0]\nmediana = 0.5* ( sort(Data)[int(len(Data)/2)]+sort(Data)[int(len(Data+1)/2)] )\nprint (\"Moda                         : {0} mg\".format(moda))\nprint (\"Mediana                      : {0} mg\".format(mediana))\n\n\nprint (len(Data))\n\n\n# Desviación estándar\ns = np.sqrt( np.sum( (Data-mean)*(Data-mean) )/(len(Data)-1)  )\nprint (\"Desviación estándar muestral: {0:.3f} mg\".format(s))\nuA = s/np.sqrt(len(Data))\nprint (\"Incertidumbre tipo A  (u_A) : {0:.3f} mg\".format(uA))\n\nk = int( np.rint( 1 + np.log2(len(Data)) ) ) +1\nprint (\"Regla de Sturges : {0}\".format( k ))\nbins = np.linspace(min(Data),max(Data),num=k+1,endpoint=True )\n\n\nmedia aritmética : 6.62 mg\nmínimo valor de v: 0.06 mg\nmáximo valor de v: 13.6 mg\nvalor ejemplo : 4.66\n[ 0.06  1.04  1.21  1.88  2.06  2.1   2.14  2.27  2.47  2.6   2.7   2.89\n  3.07  3.09  3.3   3.31  3.5   3.71  3.78  3.86  3.93  4.06  4.15  4.19\n  4.22  4.38  4.4   4.45  4.55  4.57  4.66  4.77  4.86  4.86  4.87  4.91\n  4.98  5.05  5.08  5.08  5.13  5.19  5.19  5.22  5.37  5.4   5.43  5.49\n  5.55  5.57  5.59  5.59  5.66  5.68  5.69  5.71  5.72  5.75  5.9   5.91\n  5.91  6.03  6.13  6.21  6.29  6.29  6.42  6.44  6.5   6.57  6.6   6.68\n  6.72  6.78  6.83  6.84  6.85  6.86  7.03  7.11  7.26  7.31  7.61  7.63\n  7.64  7.67  7.72  7.78  7.83  7.85  7.86  7.88  7.89  7.97  7.99  8.04\n  8.1   8.19  8.23  8.23  8.28  8.39  8.39  8.51  8.57  8.57  8.62  8.62\n  8.66  8.66  8.69  8.76  9.1   9.19  9.24  9.28  9.35  9.5   9.6   9.69\n  9.76  9.76  9.86 10.11 10.12 10.58 10.65 10.83 11.13 11.21 11.3  11.43\n 11.48 11.99 12.01 12.44 13.59]\nModa utilizando stats.mode() : ModeResult(mode=array([4.86]), count=array([2]))\nModa                         : 4.86 mg\nMediana                      : 6.5 mg\n137\nDesviación estándar muestral: 2.646 mg\nIncertidumbre tipo A  (u_A) : 0.226 mg\nRegla de Sturges : 9\n\n\n\n\nMostrar código\nfig, axes = plt.subplots(nrows=1,ncols=1,figsize=(5,5))\n\nn, bins, patches = axes.hist(Data, bins, density=False, facecolor='#2D3862', alpha=0.75,rwidth=0.9)\n\n# ticks en el eje x\naxes.set_xticks(bins)\nlabels = [ r\"${0:.3}$\".format(x) for x in bins ]\naxes.set_xticklabels( labels )\n\n# Etiquetas\naxes.set_title(r\"${\\rm Masas}\\,{\\rm de}\\,{\\rm filtros}\\,{\\rm de}\\,{\\rm policarbonato}\\,({\\rm mg})$\")\naxes.set_xlabel(r\"${\\rm Masas}\\,{({\\rm mg})}$\")\naxes.set_ylabel(r\"${\\rm Frecuencias}$\")\n\naxes.plot( [mean,mean],[0,40],ls='--',c=\"red\",    label=r\"$\\bar{m}=\\,$\"   +r\"${0:.3f}\\,\\pm{1:.3f}\\,$\".format(mean,uA)+r\"${\\rm mg}$\" )\naxes.plot( [moda,moda],[0,40],ls='--',c=\"#28DDA2\",label=r\"${\\rm moda}=\\,$\"+r\"${0:.2f}\\,$\".format(moda)+r\"$\\,{\\rm mg}$\" )\naxes.plot( [mediana,mediana],[0,40],ls='--',c=\"#5E99CF\",label=r\"${\\rm mediana}=\\,$\"+r\"${0:.2f}\\,$\".format(mediana)+r\"$\\,{\\rm mg}$\" )\n\naxes.set_ylim(0,60)\n# axes.set_xlim(3.4,4.4)\n\naxes.legend(loc=0,frameon=True,framealpha=1.0)\naxes.grid()\n\nfig.tight_layout()\n\n\n\n\n\n\n\n\n\n\n\nMostrar código\nimport seaborn as sns\n\nfig, axes = plt.subplots(nrows=1,ncols=1,figsize=(5,5))\n\nx    = np.linspace( min(Data),max(Data),1001 )\nDist = (1/ sqrt(2*np.pi*s*s))*exp(-(x-mean)*(x-mean)/2.0/s/s)\n\naxes.plot( x,Dist,label=r\"${\\rm Gaussiana}$\" )\n\n\nymax = 0.16\n\nn, bins, patches = axes.hist(Data, bins, density=True, facecolor='#2D3862', alpha=0.75,rwidth=1.0)\n\n# ticks en el eje x\naxes.set_xticks(bins)\nlabels = [ r\"${0:.3}$\".format(x) for x in bins ]\naxes.set_xticklabels( labels )\n\n# Etiquetas\naxes.set_title(r\"${\\rm Masas}\\,{\\rm de}\\,{\\rm filtros}\\,{\\rm de}\\,{\\rm policarbonato}\\,({\\rm mg})$\")\naxes.set_xlabel(r\"${\\rm Masas}\\,{({\\rm mg})}$\")\naxes.set_ylabel(r\"${\\rm Frecuencias}$\")\n\naxes.plot( [mean,mean],[0,ymax],ls='--',c=\"red\",    label=r\"$\\bar{m}=\\,$\"   +r\"${0:.3f}\\,\\pm{1:.3f}\\,$\".format(mean,uA)+r\"${\\rm mg}$\" )\naxes.plot( [moda,moda],[0,ymax],ls='--',c=\"#28DDA2\",label=r\"${\\rm moda}=\\,$\"+r\"${0:.2f}\\,$\".format(moda)+r\"$\\,{\\rm mg}$\" )\naxes.plot( [mediana,mediana],[0,ymax],ls='--',c=\"#5E99CF\",label=r\"${\\rm mediana}=\\,$\"+r\"${0:.2f}\\,$\".format(mediana)+r\"$\\,{\\rm mg}$\" )\n\n\naxes.set_ylim(0,ymax+0.1)\n# axes.set_xlim(3.4,4.4)\n\naxes.legend(loc=1,frameon=True,framealpha=1.0)\naxes.grid()\n\n# fig.savefig(\"Histograma.pdf\")\n\nfig.tight_layout()\n\n\n\n\n\n\n\n\n\n\n\nMostrar código\nmpl.rcParams.update({'font.size': 12, 'text.usetex': True})\nmpl.rcParams.update({'axes.linewidth':1.5})\nmpl.rcParams.update({'axes.labelsize':'large'})\nmpl.rcParams.update({'xtick.major.size':6})\nmpl.rcParams.update({'xtick.minor.size':4})\nmpl.rcParams.update({'ytick.major.size':6})\nmpl.rcParams.update({'ytick.minor.size':4})\nmpl.rcParams.update({'xtick.major.width':1.5})\nmpl.rcParams.update({'xtick.minor.width':1.0})\nmpl.rcParams.update({'ytick.major.width':1.5})\nmpl.rcParams.update({'ytick.minor.width':1.0})\nmpl.rcParams.update({'legend.frameon':False,'legend.framealpha':0.0})\n\nx    = np.linspace( min(Data),max(Data),1001 )\nDist = (1/ sqrt(2*np.pi*s*s))*exp(-(x-mean)*(x-mean)/2.0/s/s)\n# colores = sns.cubehelix_palette(len(y)+4, reverse=True, start=-0.5, rot=0.3)\ncolores = sns.cubehelix_palette(len(bins), reverse=True, start=.5, rot=-.75)\n\nfig, axes = plt.subplots(nrows=1,ncols=1,figsize=(5,5))\n\naxes.plot( x,Dist,c='black',label=r\"{\\rm Gaussiana}\",lw=4,alpha=0.4,zorder=3 )\n\nymax = 0.16\n\n\n\nn, bins, patches = axes.hist(Data, bins, density=True,rwidth=0.95,zorder=2)\n\nfracs = n / n.max()\nii = -1\nfor thisfrac, thispatch in zip(fracs, patches):\n    ii += 1\n    thispatch.set_facecolor(colores[ii])\n    \ndy = 0.008\ndx = 0.15\nfor vv, xx in zip(n,bins):\n    Str = r'$\\mathbf{'+r'{0:.2f}'.format(vv)+r'}$'\n    axes.text(xx+dx,vv-dy,Str,color=\"white\",fontsize=12)\n\n    \n# ticks en el eje x\naxes.set_xticks(bins)\nlabels = [ r\"${0:.3}$\".format(x) for x in bins ]\naxes.set_xticklabels( labels )\n\n# Etiquetas\naxes.set_title(r\"${\\rm Mediciones}\\,{\\rm de}\\,{\\rm longitud}\\,({\\rm cm})$\")\naxes.set_xlabel(r\"${\\rm Longitud}\\,{({\\rm cm})}$\")\naxes.set_ylabel(r\"${\\rm Frecuencias}\\,{\\rm relativas}$\")\n\n# axes.plot( [mean,mean],[0,ymax],ls='-',c=\"red\",    label=r\"$\\bar{m}=\\,$\"   +r\"${0:.1f}\\,\\pm{1:.1f}\\,$\".format(mean,uA)+r\"${\\rm mg}$\" )\n# axes.plot( [moda,moda],[0,ymax],ls='--',c=\"#28DDA2\",label=r\"${\\rm moda}=\\,$\"+r\"${0:.1f}\\,$\".format(moda)+r\"$\\,{\\rm mg}$\" )\n# axes.plot( [mediana,mediana],[0,ymax],ls=':',c=\"#5E99CF\",label=r\"${\\rm mediana}=\\,$\"+r\"${0:.1f}\\,$\".format(mediana)+r\"$\\,{\\rm mg}$\" )\n\naxes.plot( [mean,mean],[0,ymax],      ls='-', c=\"red\",  lw=4,alpha=0.6, \n          label=r\"$\\bar{m}=\\,$\"   +r\"${0:.1f}\\,\\pm{1:.1f}\\,$\".format(mean,uA)+r\"${\\rm cm}$\", zorder=1 )\n\n# axes.plot( [moda,moda],[0,ymax],      ls='--',c=\"red\",  lw=4,alpha=0.6, \n#          label=r\"${\\rm moda}=\\,$\"+r\"${0:.1f}\\,$\".format(moda)+r\"$\\,{\\rm cm}$\",              zorder=1 )\n\naxes.plot( [mediana,mediana],[0,ymax],ls=':', c=\"black\",lw=4,alpha=0.6, \n          label=r\"${\\rm mediana}=\\,$\"+r\"${0:.1f}\\,$\".format(mediana)+r\"$\\,{\\rm cm}$\",        zorder=1 )\n\n\n\n\naxes.set_ylim(0,ymax+0.03)\n# axes.set_xlim(3.4,4.4)\n\naxes.legend(loc=1,frameon=True,framealpha=1.0)\n# axes.grid()\n\naxes.spines['top'].set_visible(False)\naxes.spines['right'].set_visible(False)\naxes.spines['bottom'].set_visible(False)\naxes.spines['left'].set_visible(False)\n\nfig.tight_layout()\n\n# fig.savefig(\"Histograma.pdf\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tarea 1 - La medición y su incertidumbre</span>"
    ]
  },
  {
    "objectID": "tarea2_bis.html",
    "href": "tarea2_bis.html",
    "title": "4  Ejercicio - Caída libre",
    "section": "",
    "text": "Considere el siguiente conjunto de datos que se midieron mediante una experiencia en el laboratorio siguiendo el modelo de caída libre. La resolución del cronómetro (empleado para medir el tiempo) es de \\(0.01\\,{\\rm s}\\) y la resolución de la regla (empleada para medir la longitud) es \\(1\\,{\\rm cm}\\).\n\n\n\nh\nt1\nt2\nt3\nt4\nt5\n\n\n\n\n1.0\n0.46\n0.47\n0.48\n0.46\n0.46\n\n\n0.8\n0.43\n0.42\n0.42\n0.41\n0.41\n\n\n0.6\n0.37\n0.37\n0.38\n0.36\n0.37\n\n\n0.5\n0.33\n0.34\n0.32\n0.30\n0.33\n\n\n0.4\n0.27\n0.28\n0.28\n0.29\n0.29\n\n\n\n\n\nMostrar código\nfrom pylab import *\nfrom scipy import stats\nimport seaborn as sns\nfrom matplotlib import colors\n\nfrom matplotlib import font_manager as fm, rcParams\nimport os\n\nmpl.rcParams.update({'font.size': 18, 'text.usetex': True})\nmpl.rcParams.update({'axes.linewidth':1.5})\nmpl.rcParams.update({'axes.labelsize':'large'})\nmpl.rcParams.update({'xtick.major.size':6})\nmpl.rcParams.update({'xtick.minor.size':4})\nmpl.rcParams.update({'ytick.major.size':6})\nmpl.rcParams.update({'ytick.minor.size':4})\nmpl.rcParams.update({'xtick.major.width':1.5})\nmpl.rcParams.update({'xtick.minor.width':1.0})\nmpl.rcParams.update({'ytick.major.width':1.5})\nmpl.rcParams.update({'ytick.minor.width':1.0})\nmpl.rcParams.update({'legend.frameon':False,'legend.framealpha':0.0})\n\nfpath = os.path.join(\"HELVETNL.TTF\")\nprop  = fm.FontProperties(fname=fpath,size=18)\nfname = os.path.split(fpath)[1]\n\n\n\n\nMostrar código\nDatos = array([[1.0, 0.46, 0.47, 0.48, 0.46, 0.46],\n[0.8, 0.43, 0.42, 0.42, 0.41, 0.41],\n[0.6, 0.37, 0.37, 0.38, 0.36, 0.37],\n[0.5, 0.33, 0.34, 0.32, 0.30, 0.33],\n[0.4, 0.27, 0.28, 0.28, 0.29, 0.29]])\n\nh     = Datos.T[0]\ntimes = Datos.T[1:]\n\n\n\\[\n\\displaystyle u_{\\rm C}(t) = \\sqrt{ \\bigg[ \\sqrt{ \\frac{\\sum_i (t_i-\\bar{t})^2}{n-1} }\\bigg( \\frac{1}{\\sqrt{n}} \\bigg) \\bigg]^2 + u_{\\rm B}^2(t) }\n\\]\n\n\nMostrar código\nn    = len(times)   # verificar\nuB_t = 0.01\nt    = np.mean(times,axis=0)\nu_t  = np.sqrt( ( np.std(times,axis=0)*(1/(n-1)) )*( np.std(times,axis=0)*(1/(n-1)) ) + uB_t*uB_t )\n\n\n\nDetermine el tiempo promedio y su incertidumbre con su incertidumbre para cada altura.\n\n\n\nMostrar código\nprint('tprom [s] =',t)\nprint('u(t) [s] =',u_t)\n\n\ntprom [s] = [0.466 0.418 0.37  0.324 0.282]\nu(t) [s] = [0.01019804 0.01017349 0.01012423 0.01055936 0.01017349]\n\n\n\n\nMostrar código\nuB_h = 0.01 \nu_h  = uB_h*np.ones_like(h)\nprint('h [m] =',h)\nprint('u(h) [m] =',u_h)\n\n\nh [m] = [1.  0.8 0.6 0.5 0.4]\nu(h) [m] = [0.01 0.01 0.01 0.01 0.01]\n\n\n\nRealice la regresión lineal por el método de cuadrados mínimos y obtenga el valor de la pendiente y su incertidumbre\n\n\n\nMostrar código\n# Datos\nx    = h\nxerr = u_h\ny    = t*t\nyerr = 2*t*u_t\n\nSxy = np.sum(x*y)\nSx  = np.sum(x)\nSy  = np.sum(y)\nSxx = np.sum(x*x)\nFac = n*Sxx-Sx*Sx\nm   = (n*Sxy-Sx*Sy)/Fac\nb   = (Sxx*Sy-Sx*Sxy)/Fac\nprint ('m = {0:.2E} s²/m'.format(m))\nprint ('b = {0:.2E} s²'.format(b))\n\n\nm = 2.27E-01 s²/m\nb = -7.00E-03 s²\n\n\n\n\nMostrar código\nSy_mx_b = np.sum( (y-m*x - b)*(y-m*x - b) )\nu_m     = np.sqrt(  n*Sy_mx_b/(n-2)/Fac  )\nu_b     = np.sqrt( Sxx*Sy_mx_b/(n-2)/Fac )\nprint ('u(m) = {0:.2e} s^2/m'.format(u_m))\nprint ('u(b) = {0:.2e} s^2'.format(u_b))\n\n\nu(m) = 1.12e-02 s^2/m\nu(b) = 7.80e-03 s^2\n\n\n\n\nMostrar código\ng   = 2/m\nu_g = 2.0/m/m*u_m \nprint ('g    = {0:.8f} m/s^2'.format(g))\nprint ('u(g) = {0:.8f} m/s^2'.format(u_g))\nprint ('')\nprint ('g    = {0:.1f} m/s^2'.format(g))\nprint ('u(g) = {0:.1f} m/s^2'.format(u_g))\n\n\ng    = 8.81995134 m/s^2\nu(g) = 0.43699326 m/s^2\n\ng    = 8.8 m/s^2\nu(g) = 0.4 m/s^2\n\n\n\n\nMostrar código\nfig,axes = plt.subplots(ncols=2,nrows=1,figsize=(13,6))\n\nxline = np.linspace(x.min()-0.1,x.max()+0.1,400)\nyline = m*xline + b\n\naxes[0].set_title(r'Ca\\'ida libre: Tiempo al cuadrado vs altura',fontproperties=prop)\n\naxes[0].errorbar(x,y,xerr=xerr,yerr=yerr ,fmt='o',mfc='none',ms=10,\n                  elinewidth=1,capthick=1,ecolor='b',zorder=2,\n                  markeredgecolor='b',dash_capstyle='round',capsize=2,label=r'Datos')\n\nlinelabel = r'$g = ({0:.1f}\\pm{1:.1f})$'.format(g,u_g)+r'$\\;{\\rm m/s}^2$'\n\naxes[0].plot(xline,yline,c='red',lw=3,label=linelabel,zorder=1)\n\naxes[0].set_yticks([0.05,0.1,0.15,0.2,0.25])\n\naxes[0].set_xlabel('Altura ('+r'${\\rm m}$'+')',fontproperties=prop)\naxes[0].set_ylabel(r'$t^2$ ('+r'${\\rm s}^2$'+')',fontproperties=prop)\n\naxes[0].legend()\n\n#############################\n\n\naxes[1].set_title(r'Ca\\'ida libre: Tiempo vs altura',fontproperties=prop)\n\naxes[1].errorbar(x,sqrt(y),xerr=xerr,yerr=0.5*yerr/sqrt(y) ,fmt='o',mfc='none',ms=10,\n                  elinewidth=1,capthick=1,ecolor='b',zorder=2,\n                  markeredgecolor='b',dash_capstyle='round',capsize=2,label=r'Datos')\n\nlinelabel = r'$g = ({0:.1f}\\pm{1:.1f})$'.format(g,u_g)+r'$\\;{\\rm m/s}^2$'\n\naxes[1].plot(xline,sqrt(yline),c='red',lw=3,label=linelabel,zorder=1)\n\n# axes[1].set_yticks([0.05,0.1,0.15,0.2,0.25])\n\naxes[1].set_xlabel('Altura ('+r'${\\rm m}$'+')',fontproperties=prop)\naxes[1].set_ylabel(r'Tiempo ('+r'${\\rm s}$'+')',fontproperties=prop)\n\naxes[1].legend()\n\n\n\nfig.tight_layout()\n\nfig.savefig('AjusteLineal.pdf',dpi=150)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Ejercicio - Caída libre</span>"
    ]
  },
  {
    "objectID": "tarea3.html",
    "href": "tarea3.html",
    "title": "6  Tarea 3 - Ley de enfriamiento",
    "section": "",
    "text": "La ley de enfriamiento de Newton nos dice que la tasa de pérdida de calor de un cuerpo es directamente proporcional a la diferencia de temperatura entre el cuerpo y su entorno.\nDe forma simplificada \\[\n\\frac{d}{dt} T = -\\kappa \\big[ T(t)-T_a \\big]\n\\]\nAl resolver la ecuación anterior obtenemos \\[\n\\ln \\left| \\frac{T(t)-T_a}{T(t_0)-T_a} \\right| = -\\kappa (t-t_0)\n\\]\n\n\n\nTime [\\({\\rm min}\\)]\nTemperatura [\\(^\\circ {\\rm C}\\)]\n\n\n\n\n0\n80\n\n\n0.25\n79\n\n\n0.5\n78\n\n\n0.75\n77\n\n\n1\n76\n\n\n2\n74\n\n\n3\n71\n\n\n4\n68\n\n\n5\n65\n\n\n6\n64\n\n\n7\n62\n\n\n8\n59\n\n\n9\n57\n\n\n10\n55\n\n\n15\n48\n\n\n20\n42\n\n\n25\n38\n\n\n30\n34\n\n\n60\n26\n\n\n90\n25\n\n\n\n\n\nCode\nfrom pylab import *\nfrom scipy import stats\nimport seaborn as sns\nfrom matplotlib import colors\n\nfrom matplotlib import font_manager as fm, rcParams\nimport os\n\nmpl.rcParams.update({'font.size': 18, 'text.usetex': True})\nmpl.rcParams.update({'axes.linewidth':1.5})\nmpl.rcParams.update({'axes.labelsize':'large'})\nmpl.rcParams.update({'xtick.major.size':6})\nmpl.rcParams.update({'xtick.minor.size':4})\nmpl.rcParams.update({'ytick.major.size':6})\nmpl.rcParams.update({'ytick.minor.size':4})\nmpl.rcParams.update({'xtick.major.width':1.5})\nmpl.rcParams.update({'xtick.minor.width':1.0})\nmpl.rcParams.update({'ytick.major.width':1.5})\nmpl.rcParams.update({'ytick.minor.width':1.0})\nmpl.rcParams.update({'legend.frameon':False,'legend.framealpha':0.0})\n\nfpath = os.path.join(\"HELVETNL.TTF\")\nprop  = fm.FontProperties(fname=fpath,size=18)\nfname = os.path.split(fpath)[1]\n\n\n\n\nCode\nDatos = array([[0.00, 80],\n[0.25, 79],\n[0.50, 78],\n[0.75, 77],\n[1.00, 76],\n[2.00, 74],\n[3.00, 71],\n[4.00, 68],\n[5.00, 65],\n[6.00, 64],\n[7.00, 62],\n[8.00, 59],\n[9.00, 57],\n[10.0, 55],\n[15.0, 48],\n[20.0, 42],\n[25.0, 38],\n[30.0, 34],\n[60.0, 26],\n[90.0, 25]])\n\nt = Datos.T[0]\nT = Datos.T[1]\n\n\n\n\nCode\nu_t   = 0.05   # min\nu_T   = 1      # °C\nTa    = 24\nTi    = 80\n\n\n\\[\\displaystyle T(t) = T_a + \\big[ T_i-T_a \\big]{\\rm e}^{-\\kappa t}\\] \\[ \\displaystyle {\\rm ln} \\bigg| \\frac{T(t)-T_a}{T_i-T_a} \\bigg| = -\\kappa t\\] \\[ T_a= 24^\\circ{\\rm C} \\quad T_i = 80^\\circ{\\rm C}\\] \\[ y = mx+b \\] \\[\\displaystyle m = -\\kappa \\]\n\n\nCode\n# Datos\nx    = t\nxerr = u_t\ny    = log( (T-Ta)/(Ti-Ta) )\nyerr = u_T/(T-Ta)\nn    = len(t)\n\n\n\n\nCode\nSxy = np.sum(x*y)\nSx  = np.sum(x)\nSy  = np.sum(y)\nSxx = np.sum(x*x)\nFac = n*Sxx-Sx*Sx\nm   = (n*Sxy-Sx*Sy)/Fac\nb   = (Sxx*Sy-Sx*Sxy)/Fac\nprint ('m = {0:.2E} 1/min'.format(m))\nprint ('b = {0:.2E} '.format(b))\n\n\nm = -4.80E-02 1/min\nb = -7.76E-02 \n\n\n\n\nCode\nSy_mx_b = np.sum( (y-m*x - b)*(y-m*x - b) )\nu_m     = np.sqrt(  n*Sy_mx_b/(n-2)/Fac  )\nu_b     = np.sqrt( Sxx*Sy_mx_b/(n-2)/Fac )\nprint ('u(m) = {0:.2e} 1/min'.format(u_m))\nprint ('u(b) = {0:.2e} '.format(u_b))\n\n\nu(m) = 1.46e-03 1/min\nu(b) = 3.89e-02 \n\n\n\n\nCode\nkappa   = -m\nu_kappa = u_m \nprint ('g    = {0:.8f} 1/min'.format(kappa))\nprint ('u(g) = {0:.8f} 1/min'.format(u_kappa))\nprint ('')\nprint ('g    = {0:.3f} 1/min'.format(kappa))\nprint ('u(g) = {0:.3f} 1/min'.format(u_kappa))\n\n\ng    = 0.04801509 1/min\nu(g) = 0.00145690 1/min\n\ng    = 0.048 1/min\nu(g) = 0.001 1/min\n\n\n\n\nCode\nfig,axes = plt.subplots(ncols=2,nrows=1,figsize=(13,6))\n\nxline = np.linspace(x.min(),x.max(),400)\nyline = m*xline + b\n\naxes[0].set_title(r'Ley de enfriamiento: ln[ (T-Ta)/(Ti-Ta) ]  vs tiempo',fontproperties=prop)\n\naxes[0].errorbar(x,y,xerr=xerr,yerr=yerr ,fmt='o',mfc='none',ms=10,\n                  elinewidth=1,capthick=1,ecolor='b',zorder=2,\n                  markeredgecolor='b',dash_capstyle='round',capsize=2,label=r'Datos')\n\nlinelabel = r'$\\kappa = ({0:.3f}\\pm{1:.3f})$'.format(kappa,u_kappa)+r'$\\;{\\rm min}^{-1}$'\n\naxes[0].plot(xline,yline,c='red',lw=3,label=linelabel,zorder=1)\n\n# axes[0].set_yticks([0.05,0.1,0.15,0.2,0.25])\n\naxes[0].set_xlabel('Tiempo ('+r'${\\rm min}$'+')',fontproperties=prop)\naxes[0].set_ylabel(r'${\\rm ln} \\bigg| \\frac{T(t)-T_a}{T_i-T_a} \\bigg|$',fontproperties=prop)\n\naxes[0].legend()\n\n#############################\n\n\naxes[1].set_title(r'Ley de enfriamiento: temperatura vs tiempo',fontproperties=prop)\n\naxes[1].errorbar(x,Ta+(Ti-Ta)*exp(y),xerr=u_t,yerr=u_T ,fmt='o',mfc='none',ms=10,\n                  elinewidth=1,capthick=1,ecolor='b',zorder=2,\n                  markeredgecolor='b',dash_capstyle='round',capsize=2,label=r'Datos')\n\nlinelabel = r'$\\kappa = ({0:.3f}\\pm{1:.3f})$'.format(kappa,u_kappa)+r'$\\;{\\rm min}^{-1}$'\n\naxes[1].plot(xline,Ta+(Ti-Ta)*exp(yline),c='red',lw=3,label=linelabel,zorder=1)\n\n# axes[1].set_yticks([0.05,0.1,0.15,0.2,0.25])\n\naxes[1].set_xlabel('Tiempo ('+r'${\\rm min}$'+')',fontproperties=prop)\naxes[1].set_ylabel(r'Temperatura ('+r'$^\\circ{\\rm C}$'+')',fontproperties=prop)\n\naxes[1].legend()\n\n\n\nfig.tight_layout()\n\n# fig.savefig('AjusteLineal.pdf',dpi=150)"
  },
  {
    "objectID": "tarea2_bisbis.html",
    "href": "tarea2_bisbis.html",
    "title": "5  Ejercicio - Resorte con masa",
    "section": "",
    "text": "M [g]\nL [cm]\n\n\n\n\n90.8\n12.73\n\n\n181.6\n13.00\n\n\n272.4\n13.03\n\n\n363.2\n13.06\n\n\n454.0\n13.11\n\n\n544.8\n13.34\n\n\n635.6\n13.18\n\n\n726.4\n13.31\n\n\n817.2\n13.87\n\n\n908.0\n13.72\n\n\n998.8\n14.15\n\n\n1089.6\n13.89\n\n\n1180.4\n14.05\n\n\n1271.2\n14.25\n\n\n1362.0\n14.2\n\n\n1452.8\n14.25\n\n\n1543.6\n14.61\n\n\n1634.4\n14.43\n\n\n1725.2\n14.73\n\n\n\n\n\nMostrar código\nfrom pylab import *\nfrom scipy import stats\nimport seaborn as sns\nfrom matplotlib import colors\n\nfrom matplotlib import font_manager as fm, rcParams\nimport os\nmpl.rcParams.update({'font.size': 18, 'text.usetex': True})\nmpl.rcParams.update({'axes.linewidth':1.5})\nmpl.rcParams.update({'axes.labelsize':'large'})\nmpl.rcParams.update({'xtick.major.size':6})\nmpl.rcParams.update({'xtick.minor.size':4})\nmpl.rcParams.update({'ytick.major.size':6})\nmpl.rcParams.update({'ytick.minor.size':4})\nmpl.rcParams.update({'xtick.major.width':1.5})\nmpl.rcParams.update({'xtick.minor.width':1.0})\nmpl.rcParams.update({'ytick.major.width':1.5})\nmpl.rcParams.update({'ytick.minor.width':1.0})\nmpl.rcParams.update({'legend.frameon':False,'legend.framealpha':0.0})\n\n\n\n\nMostrar código\n# Datos\nDatos = array([[90.8,12.73],\n[181.6,     13.00],\n[272.4,     13.03],\n[363.2,     13.06],\n[454    ,   13.11],\n[544.8  ,   13.34],\n[635.6  ,   13.18],\n[726.4  ,   13.31],\n[817.2  ,   13.87],\n[908    ,   13.72],\n[998.8  ,   14.15],\n[1089.6 ,   13.89],\n[1180.4 ,   14.05],\n[1271.2 ,   14.25],\n[1362   ,   14.2],\n[1452.8 ,   14.25],\n[1543.6 ,   14.61],\n[1634.4 ,   14.43],\n[1725.2 ,   14.73]])\nMasa = Datos.T[0]\nX = Datos.T[1]\n\n\n\n\nMostrar código\nn = len(Masa)\ny = X\nx = Masa\nscatter(x,y)\nxlabel(\"M [g]\")\nylabel(\"L [cm]\")\n\n\nText(0, 0.5, 'L [cm]')\n\n\n\n\n\n\n\n\n\n\n\nMostrar código\nSxy = np.sum(x*y)\nSx  = np.sum(x)\nSy  = np.sum(y)\nSxx = np.sum(x*x)\nFac = n*Sxx-Sx*Sx\nm   = (n*Sxy-Sx*Sy)/Fac\nb   = (Sxx*Sy-Sx*Sxy)/Fac\nprint ('m = {0:.2E} cm/g'.format(m))\nprint ('b = {0:.2E} cm'.format(b))\n\n\nm = 1.17E-03 cm/g\nb = 1.27E+01 cm\n\n\n\n\nMostrar código\nSy_mx_b = np.sum( (y-m*x - b)*(y-m*x - b) )\nu_m     = np.sqrt(  n*Sy_mx_b/(n-2)/Fac  )\nu_b     = np.sqrt( Sxx*Sy_mx_b/(n-2)/Fac )\nprint ('u(m) = {0:.2e} cm/g'.format(u_m))\nprint ('u(b) = {0:.2e} cm'.format(u_b))\n\n\nu(m) = 6.68e-05 cm/g\nu(b) = 6.91e-02 cm\n\n\n\n\nMostrar código\ng = 9.81*100  # cm/s^2\nk = g/m\nu_k = (g/m/m)*u_m\nprint ('k    = {0:.2e} kg/s^2'.format(k/1000))\nprint ('u(k) = {0:.2e} kg/s^2'.format(u_k/1000))\nprint ('')\nprint ('k    = {0:.2f} kg/s^2'.format(k/1000))\nprint ('u(k) = {0:.7f} kg/s^2'.format(u_k/1000))\n\n\nk    = 8.35e+02 kg/s^2\nu(k) = 4.75e+01 kg/s^2\n\nk    = 835.35 kg/s^2\nu(k) = 47.5004541 kg/s^2\n\n\nIncluyendo valores de error ficticio, sólo para la visualización.\n\n\nMostrar código\n# Valores de error ficticio\nxerr = 0.1*10*10*10\nyerr = 0.01*10\n\n\n\n\nMostrar código\nfpath = os.path.join(\"HELVETNL.TTF\")\nprop  = fm.FontProperties(fname=fpath,size=18)\nfname = os.path.split(fpath)[1]\n\n\n\n\nMostrar código\nfig,axes = plt.subplots(ncols=2,nrows=1,figsize=(13,6))\n\nxline = np.linspace(0,x.max(),400)\nyline = m*xline + b\n\n\naxes[0].set_title(r'Resorte: Elongaci\\'on vs Masa (incertidumbre ficticia)',fontproperties=prop)\n\naxes[0].errorbar(x,y,xerr=xerr,yerr=yerr ,fmt='o',mfc='none',ms=10,\n                  elinewidth=1,capthick=1,ecolor='b',zorder=2,\n                  markeredgecolor='b',dash_capstyle='round',capsize=2,label=r'Datos')\n\nlinelabel = r'$k = ({0:.0f}\\pm{1:.0f})$'.format(k/1000,u_k/1000)+r'$\\;{\\rm N/m}$'\n\naxes[0].plot(xline,yline,c='red',lw=3,label=linelabel,zorder=1)\n\naxes[0].set_xlabel('Masa ('+r'${\\rm g}$'+')',fontproperties=prop)\naxes[0].set_ylabel(r'Elongaci\\'on ('+r'${\\rm cm}$'+')',fontproperties=prop)\n\naxes[0].legend()\n\n#############################\n\naxes[1].set_title(r'Resorte: Elongaci\\'on vs Masa',fontproperties=prop)\n\naxes[1].scatter(x,y,facecolors='none',edgecolors='b',s=100,lw=1.0,zorder=2,label='Datos')\naxes[1].plot(xline,yline,c='red',lw=3,zorder=1,label=linelabel)\n\naxes[1].set_xlabel('Masa ('+r'${\\rm g}$'+')',fontproperties=prop)\naxes[1].set_ylabel(r'Elongaci\\'on ('+r'${\\rm cm}$'+')',fontproperties=prop)\n\n\naxes[1].tick_params(axis='both',direction='inout',which='both')\n\naxes[1].legend()\n\nfig.tight_layout()\n\n# fig.savefig('AjusteLineal.pdf',dpi=150)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Ejercicio - Resorte con masa</span>"
    ]
  },
  {
    "objectID": "tarea1.html",
    "href": "tarea1.html",
    "title": "2  Tarea 1 - La medición y su incertidumbre",
    "section": "",
    "text": "2.1 Mediciones directas e indirectas\n¿Cuál es la diferencia entre una medida directa y una medida indirecta?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tarea 1 - La medición y su incertidumbre</span>"
    ]
  }
]